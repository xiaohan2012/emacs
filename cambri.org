* strings in clipboard

#+begin_src emacs-lisp

  (defun cambri/aws-account-number ()
    (interactive)
    (kill-new "503935936293")
    (message "copid '503935936293'")
    )
#+end_src

#+RESULTS:
: cambri/aws-account-number
* dbt

#+begin_src emacs-lisp
  (defvar cambri/dbt/modes (list "itself" "ancestors" "descendents") "the list of model types by traffic")

  (defun cambri/dbt-run-model ()
    "Run a dbt model."
    (interactive)  
    (let* ((buffer-name "*DBT execution")
           (sql-files (seq-filter
                       (lambda (filename) (string-suffix-p ".sql" filename))
                       (append
                        (directory-files "/Users/hanxiao/code/monolith/analytics/datalake/ecs/dbt/models/curated/survey_results_kpi/")
                        (directory-files "/Users/hanxiao/code/monolith/analytics/datalake/ecs/dbt/models/intermediate/app/survey_results/kpi/")                        
                        ;; (directory-files "/Users/hanxiao/code/monolith/analytics/datalake/ecs/dbt/models/intermediate/app/top2box_kpi/")
                        )))
           (raw-model-name (completing-read "DBT model: " (mapcar (lambda (filename) (s-chop-suffix ".sql" filename)) sql-files)))
           (mode (completing-read "Mode: " cambri/dbt/modes nil nil "itself"))
           (model-name (cond
                        ((string= mode "itself") raw-model-name)
                        ((string= mode "ancestors") (concat "+" raw-model-name))
                        ((string= mode "descendents") (concat raw-model-name "+"))
                        (t nil)))
           )
      (shell buffer-name)
      (end-of-buffer)
      (insert "pyenv deactivate\n")
      (comint-send-input)    
      (insert "pyenv activate dbt\n")
      (comint-send-input)
      (insert "cd /Users/hanxiao/code/monolith/analytics/datalake/ecs/dbt\n")
      (comint-send-input)
      (insert (format "dbt run --profiles-dir profile --vars '{execution_date: 2023/09/26}' --select %s" model-name))
      (comint-send-input) ;; Send the input to the shell process  
      (display-buffer buffer-name)
      )
    )
#+end_src

#+RESULTS:
: cambri/dbt-run-model
* launchai-v2

#+begin_src emacs-lisp
  (defun cambri/laiv2-train ()
    "Open the project shell and trigger the pipeline."
    (interactive)
    (project-shell)
    (insert "caffeinate -i python modules/metaflow_pipeline.py run\n")
    (comint-send-input)    
  )
#+end_src

#+RESULTS:
: cambri/laiv2-train

* git related

#+begin_src emacs-lisp
    
  (defun cambri/git-submodule-update ()
    "Open the project shell and run 'git submodule update --init --recursive'."
    (interactive)
    (project-shell)
    (insert "git submodule update --init --recursive\n")
    (comint-send-input)    
  )

#+end_src

#+RESULTS:
: cambri/git-submodule-update

